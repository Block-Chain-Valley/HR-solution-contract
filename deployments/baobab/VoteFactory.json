{
  "address": "0x47a0e3Bb425106f8BdCba9B7201aEaD1E53820c6",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "viewAddr_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allVotes",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allVotesLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "totalAudience",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rewardPresenter",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rewardAudience",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "memberList",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "presenter",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "createVote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getVote",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "getVoteAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isVote",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newViewAddr",
          "type": "address"
        }
      ],
      "name": "setViewAddr",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x1d1c9ab94c3a697d6a44d909d699e2c546c7ff8411c14cf6774015b4097e88ab",
  "receipt": {
    "to": null,
    "from": "0xe04E2dB8cf3B429c2cD11D558fAEbd2f0f005d24",
    "contractAddress": "0x47a0e3Bb425106f8BdCba9B7201aEaD1E53820c6",
    "transactionIndex": 0,
    "gasUsed": "1550975",
    "logsBloom": "0x
    "blockHash": "0x5b6f5c6fd48d33f79c61f62c336ca205f343c8a521d8af88d19d3e3b96732db9",
    "transactionHash": "0x1d1c9ab94c3a697d6a44d909d699e2c546c7ff8411c14cf6774015b4097e88ab",
    "logs": [],
    "blockNumber": 104956904,
    "cumulativeGasUsed": "1550975",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x19Ed8b73431208cb7ba5749C8596b469B6861C7f"
  ],
  "numDeployments": 1,
  "solcInputHash": "a4b46482ce745bba23d72a57e1401a9b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"viewAddr_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allVotes\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allVotesLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalAudience\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardPresenter\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardAudience\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"memberList\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"presenter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"createVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getVote\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"getVoteAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isVote\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newViewAddr\",\"type\":\"address\"}],\"name\":\"setViewAddr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/VoteFactory.sol\":\"VoteFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/Vote.sol\":{\"content\":\"pragma solidity ^0.8.15;\\n\\nimport \\\"./interface/IVote.sol\\\";\\nimport \\\"./interface/IView.sol\\\";\\n\\nimport \\\"./interface/IBVToken.sol\\\";\\n\\ncontract Vote is IVote {\\n    VoteState public vote;\\n    address public viewAddr;\\n    bool public isInitialized = false;\\n    event Success(bool result);\\n\\n    function initialize(\\n        address viewAddr_,\\n        uint256 totalAudience,\\n        uint256 rewardPresenter,\\n        uint256 rewardAudience,\\n        address[] memory memberList,\\n        address presenter\\n    ) external {\\n        require(isInitialized == false, \\\"Can be Initialized only once\\\");\\n        VoteState memory voteLocal;\\n\\n        viewAddr = viewAddr_;\\n        voteLocal._state = State.Ongoing;\\n        voteLocal._totalAudience = totalAudience;\\n        voteLocal._rewardPresenter = rewardPresenter;\\n        voteLocal._rewardAudience = rewardAudience;\\n        voteLocal._memberList = memberList;\\n        voteLocal._presenter = presenter;\\n        voteLocal._startTime = block.timestamp;\\n        // TODO: \\ud14c\\uc2a4\\ud305 \\uc2dc \\uc2dc\\uac04 \\ud655\\uc778 \\ud544\\uc694\\n        voteLocal._endTime = block.timestamp + 10800;\\n\\n        vote = voteLocal;\\n        isInitialized = true;\\n    }\\n\\n    function getVote() external returns (VoteState memory) {\\n        return vote;\\n    }\\n\\n    function voteAudience() external {\\n        VoteState memory voteLocal = vote;\\n        uint256 memberListLength = voteLocal._memberList.length;\\n        bool isInMemberList = false;\\n\\n        for (uint256 i = 0; i < memberListLength; i += 1) {\\n            if (voteLocal._memberList[i] == msg.sender) {\\n                isInMemberList = true;\\n                break;\\n            }\\n        }\\n\\n        if (isInMemberList == false) {\\n            emit Success(false);\\n            revert(\\\"msg.sender must be audience\\\");\\n        }\\n\\n        if (block.timestamp >= voteLocal._endTime) {\\n            if (voteLocal._approvedAudience < (voteLocal._totalAudience * 2) / 3) {\\n                voteLocal._state = State.Rejected;\\n            }\\n        } else {\\n            voteLocal._approvedAudience = voteLocal._approvedAudience + 1;\\n            emit Success(true);\\n\\n            address bvTokenAddr = IView(viewAddr).getBVTokenAddress();\\n            IBVToken(bvTokenAddr).giveReward(msg.sender, voteLocal._rewardAudience);\\n            if (voteLocal._approvedAudience >= (voteLocal._totalAudience * 2) / 3) {\\n                IBVToken(bvTokenAddr).giveReward(voteLocal._presenter, voteLocal._rewardPresenter);\\n                voteLocal._state = State.Approved;\\n            } else if (voteLocal._approvedAudience < (voteLocal._totalAudience * 2) / 3) {\\n                voteLocal._state = State.Ongoing;\\n            }\\n        }\\n\\n        vote = voteLocal;\\n    }\\n}\\n\",\"keccak256\":\"0x4904fc4629d8a5c8f9c55e76923c5e62549274b2de8c4739478a6a9aa797fa26\"},\"src/VoteFactory.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.15;\\n\\nimport \\\"./interface/IVoteFactory.sol\\\";\\nimport \\\"./Vote.sol\\\";\\n\\ncontract VoteFactory is IVoteFactory {\\n    address viewAddr;\\n    // \\ud22c\\ud45c index -> \\ud22c\\ud45c \\ucee8\\ud2b8\\ub799\\ud2b8 \\uc8fc\\uc18c\\n    mapping(uint256 => address) public getVote;\\n    // \\ud22c\\ud45c \\ucee8\\ud2b8\\ub799\\ud2b8 \\uc8fc\\uc18c => \\ucee8\\ud2b8\\ub799 \\uc874\\uc7ac \\uc720\\ubb34 //\\n    mapping(address => bool) public isVote;\\n    address[] public allVotes;\\n    address public admin;\\n\\n    // event PairCreated(address indexed token0, address indexed token1, address pair, uint256);\\n\\n    constructor(address viewAddr_) {\\n        admin = msg.sender;\\n        viewAddr = viewAddr_;\\n    }\\n\\n    modifier onlyAdmin() {\\n        require(admin == msg.sender, \\\"ACCESS_DENIED\\\");\\n        _;\\n    }\\n\\n    function setAdmin() private onlyAdmin {\\n        admin = msg.sender;\\n    }\\n\\n    function setViewAddr(address newViewAddr) external onlyAdmin {\\n        viewAddr = newViewAddr;\\n    }\\n\\n    function allVotesLength() external returns (uint256 length) {\\n        length = allVotes.length;\\n    }\\n\\n    function createVote(\\n        uint256 totalAudience,\\n        uint256 rewardPresenter,\\n        uint256 rewardAudience,\\n        address[] memory memberList,\\n        address presenter,\\n        uint256 date\\n    ) external {\\n        address voteAddr;\\n        bytes memory bytecode = type(Vote).creationCode;\\n        bytes32 salt = keccak256(abi.encodePacked(date));\\n        assembly {\\n            voteAddr := create2(0, add(bytecode, 32), mload(bytecode), salt)\\n        }\\n\\n        IVote(voteAddr).initialize(viewAddr, totalAudience, rewardPresenter, rewardAudience, memberList, presenter);\\n\\n        getVote[date] = voteAddr;\\n        isVote[voteAddr] = true;\\n        allVotes.push(voteAddr);\\n\\n        // emit VoteCreated();\\n    }\\n\\n    function getVoteAddress(uint256 date) external returns (address) {\\n        return getVote[date];\\n    }\\n}\\n\",\"keccak256\":\"0x5a2dd528bd59ae1f434849b1f87e42332c8855590e29ddcbc92b90f3546109b5\",\"license\":\"UNLICENSED\"},\"src/interface/IAttendance.sol\":{\"content\":\"pragma solidity ^0.8.15;\\n\\ninterface IAttendance {\\n    function getAttendance(address member, uint256 date) external view returns (string memory attendance);\\n\\n    function setAttendance(\\n        address member,\\n        string memory state,\\n        uint256 date\\n    ) external;\\n}\\n\",\"keccak256\":\"0x528c7f68b23a5684c82841a31a7b39b6116697722c25618a8ea629d00d09ad0d\"},\"src/interface/IBVToken.sol\":{\"content\":\"pragma solidity ^0.8.15;\\n\\ninterface IBVToken {\\n    function giveReward(address rewardAddress, uint256 reward) external;\\n}\\n\",\"keccak256\":\"0x8ae71fa86f79789746ff46a4d041d7a5169ab8a1b0e4f75a04be5f7f85ff5463\"},\"src/interface/IView.sol\":{\"content\":\"pragma solidity ^0.8.15;\\n\\nimport \\\"./IAttendance.sol\\\";\\nimport \\\"./IVote.sol\\\";\\n\\ninterface IView {\\n    struct VoteStatus {\\n        address voteAddr;\\n        IVote.State state;\\n        uint256 totalAudience;\\n        uint256 approvedAudience;\\n        uint256 startTime;\\n        uint256 endTime;\\n        uint256 rewardPresenter;\\n        uint256 rewardAudience;\\n        address[] memberList;\\n        address presenter;\\n    }\\n\\n    function getVoteAddress(uint256 date) external returns (address voteContractAddress);\\n\\n    function getAttendanceAddress() external returns (address);\\n\\n    function getBVTokenAddress() external returns (address);\\n\\n    function getVoteFactoryAddress() external returns (address);\\n\\n    function setAttendanceAddress(address attendanceAddress) external;\\n\\n    function setBVTokenAddress(address bvTokenAddress) external;\\n\\n    function setVoteFactoryAddress(address voteFactoryAddress) external;\\n}\\n\",\"keccak256\":\"0xe7df13abd03cdf55ac461e0069a28accd0a0fc17be5f0aaee612a7cae960888e\"},\"src/interface/IVote.sol\":{\"content\":\"pragma solidity ^0.8.15;\\n\\ninterface IVote {\\n    enum State {\\n        Ongoing,\\n        Approved,\\n        Rejected\\n    }\\n\\n    struct VoteState {\\n        State _state;\\n        uint256 _totalAudience;\\n        uint256 _approvedAudience;\\n        uint256 _startTime;\\n        uint256 _endTime;\\n        uint256 _rewardPresenter;\\n        uint256 _rewardAudience;\\n        address[] _memberList;\\n        address _presenter;\\n    }\\n\\n    // event VoteStart(uint256 _timestamp);\\n\\n    // event VoteResult(uint256 _timestamp, uint256 _totalAudience, uint256 _approvedAudience, State _result);\\n\\n    function initialize(\\n        address viewAddr,\\n        uint256 totalAudience,\\n        uint256 rewardPresenter,\\n        uint256 rewardAudience,\\n        address[] memory memberList,\\n        address presenter\\n    ) external;\\n\\n    function getVote() external returns (VoteState memory);\\n\\n    function voteAudience() external;\\n}\\n\",\"keccak256\":\"0x1ad1a022d9ebcde3cfe4a6764ea9b3ccaa1d3005efaf181381d69cbccab06663\"},\"src/interface/IVoteFactory.sol\":{\"content\":\"pragma solidity ^0.8.15;\\n\\ninterface IVoteFactory {\\n    function isVote(address vote) external returns (bool);\\n\\n    function allVotes(uint256 index) external returns (address);\\n\\n    function allVotesLength() external returns (uint256);\\n\\n    function createVote(\\n        uint256 totalAudience,\\n        uint256 rewardPresenter,\\n        uint256 rewardAudience,\\n        address[] memory memberList,\\n        address presenter,\\n        uint256 date\\n    ) external;\\n\\n    function getVoteAddress(uint256 date) external returns (address voteAddress);\\n}\\n\",\"keccak256\":\"0x36ea27f1e1e82194934bbc611d7d005adad804cdd5f82b6b83b0670fbac958a6\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063c4680f1d1161005b578063c4680f1d1461012c578063de63f43214610155578063ea965b8914610168578063f851a4401461017b57600080fd5b806329e194681461008d5780634096b14b146100c55780635a55c1f0146100d65780638d535cd514610117575b600080fd5b6100b061009b36600461039c565b60026020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6003546040519081526020016100bc565b6100ff6100e43660046103be565b6001602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016100bc565b61012a61012536600461039c565b61018e565b005b6100ff61013a3660046103be565b6000908152600160205260409020546001600160a01b031690565b6100ff6101633660046103be565b6101fe565b61012a6101763660046103ed565b610228565b6004546100ff906001600160a01b031681565b6004546001600160a01b031633146101dc5760405162461bcd60e51b815260206004820152600d60248201526c1050d0d154d4d7d11153925151609a1b604482015260640160405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6003818154811061020e57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000806040518060200161023b90610373565b601f1982820381018352601f9091011660408181526020820186905291925060009101604051602081830303815290604052805190602001209050808251602084016000f560005460405163907cc7b160e01b81529194506001600160a01b038086169263907cc7b1926102bd9216908d908d908d908d908d906004016104ea565b600060405180830381600087803b1580156102d757600080fd5b505af11580156102eb573d6000803e3d6000fd5b5050506000948552505060016020818152604080862080546001600160a01b039096166001600160a01b0319968716811790915580875260029092528520805460ff1916831790556003805492830181559094527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180549092169092179055505050505050565b610d188061056583390190565b80356001600160a01b038116811461039757600080fd5b919050565b6000602082840312156103ae57600080fd5b6103b782610380565b9392505050565b6000602082840312156103d057600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60008060008060008060c0878903121561040657600080fd5b86359550602080880135955060408801359450606088013567ffffffffffffffff8082111561043457600080fd5b818a0191508a601f83011261044857600080fd5b81358181111561045a5761045a6103d7565b8060051b604051601f19603f8301168101818110858211171561047f5761047f6103d7565b60405291825284820192508381018501918d83111561049d57600080fd5b938501935b828510156104c2576104b385610380565b845293850193928501926104a2565b8098505050505050506104d760808801610380565b915060a087013590509295509295509295565b600060c0820160018060a01b03808a1684526020898186015288604086015287606086015260c0608086015282875180855260e087019150828901945060005b8181101561054857855185168352948301949183019160010161052a565b5050809450505080851660a0850152505097965050505050505056fe60806040526009805460ff60a01b1916905534801561001d57600080fd5b50610ceb8061002d6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630242f35114610067578063059fe97214610085578063392e53cd146100b0578063632a9a52146100d4578063907cc7b11461011a578063df4985fa1461012f575b600080fd5b61006f610137565b60405161007c91906109f4565b60405180910390f35b600954610098906001600160a01b031681565b6040516001600160a01b03909116815260200161007c565b6009546100c490600160a01b900460ff1681565b604051901515815260200161007c565b6000546001546002546003546004546005546006546008546101069760ff16969594939291906001600160a01b031688565b60405161007c989796959493929190610a7b565b61012d610128366004610b06565b610232565b005b61012d6103c5565b61013f6108a8565b60408051610120810190915260008054829060ff16600281111561016557610165610978565b600281111561017657610176610978565b81526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481526020016007820180548060200260200160405190810160405280929190818152602001828054801561020f57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101f1575b5050509183525050600891909101546001600160a01b0316602090910152919050565b600954600160a01b900460ff16156102915760405162461bcd60e51b815260206004820152601c60248201527f43616e20626520496e697469616c697a6564206f6e6c79206f6e63650000000060448201526064015b60405180910390fd5b6102996108a8565b600980546001600160a01b0319166001600160a01b038916179055600081819052506020810186905260a0810185905260c0810184905260e081018390526001600160a01b03821661010082015242606082018190526102fb90612a30610c22565b6080820152805160008054839290829060ff1916600183600281111561032357610323610978565b0217905550602082810151600183015560408301516002830155606083015160038301556080830151600483015560a0830151600583015560c0830151600683015560e0830151805161037c92600785019201906108fe565b506101009190910151600890910180546001600160a01b039092166001600160a01b031990921691909117905550506009805460ff60a01b1916600160a01b1790555050505050565b604080516101208101909152600080549091908290829060ff1660028111156103f0576103f0610978565b600281111561040157610401610978565b81526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481526020016007820180548060200260200160405190810160405280929190818152602001828054801561049a57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161047c575b5050509183525050600891909101546001600160a01b031660209091015260e0810151519091506000805b8281101561051e57336001600160a01b03168460e0015182815181106104ed576104ed610c3a565b60200260200101516001600160a01b03160361050c576001915061051e565b610517600182610c22565b90506104c5565b508015156000036105a557604051600081527f3b0a8ddef325df2bfdfa6b430ae4c8421841cd135bfa8fb5e432f200787520bb9060200160405180910390a160405162461bcd60e51b815260206004820152601b60248201527f6d73672e73656e646572206d7573742062652061756469656e636500000000006044820152606401610288565b826080015142106105e2576003836020015160026105c39190610c50565b6105cd9190610c6f565b836040015110156105dd57600283525b6107fc565b60408301516105f2906001610c22565b60408085019190915251600181527f3b0a8ddef325df2bfdfa6b430ae4c8421841cd135bfa8fb5e432f200787520bb9060200160405180910390a16009546040805163ca65bd8960e01b815290516000926001600160a01b03169163ca65bd89916004808301926020929190829003018187875af1158015610678573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069c9190610c91565b60c085015160405163ce8ae9f360e01b815233600482015260248101919091529091506001600160a01b0382169063ce8ae9f390604401600060405180830381600087803b1580156106ed57600080fd5b505af1158015610701573d6000803e3d6000fd5b505050506003846020015160026107189190610c50565b6107229190610c6f565b8460400151106107cd5761010084015160a085015160405163ce8ae9f360e01b81526001600160a01b0384169263ce8ae9f392610775926004016001600160a01b03929092168252602082015260400190565b600060405180830381600087803b15801561078f57600080fd5b505af11580156107a3573d6000803e3d6000fd5b50869250600191506107b29050565b908160028111156107c5576107c5610978565b9052506107fa565b6003846020015160026107e09190610c50565b6107ea9190610c6f565b846040015110156107fa57600084525b505b825160008054859290829060ff1916600183600281111561081f5761081f610978565b0217905550602082810151600183015560408301516002830155606083015160038301556080830151600483015560a0830151600583015560c0830151600683015560e0830151805161087892600785019201906108fe565b506101009190910151600890910180546001600160a01b0319166001600160a01b03909216919091179055505050565b60408051610120810190915280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016060815260200160006001600160a01b031681525090565b828054828255906000526020600020908101928215610953579160200282015b8281111561095357825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061091e565b5061095f929150610963565b5090565b5b8082111561095f5760008155600101610964565b634e487b7160e01b600052602160045260246000fd5b600381106109ac57634e487b7160e01b600052602160045260246000fd5b9052565b600081518084526020808501945080840160005b838110156109e95781516001600160a01b0316875295820195908201906001016109c4565b509495945050505050565b60208152610a0660208201835161098e565b602082015160408201526040820151606082015260608201516080820152608082015160a082015260a082015160c082015260c082015160e0820152600060e08301516101206101008181860152610a626101408601846109b0565b9501516001600160a01b03169301929092525090919050565b6101008101610a8a828b61098e565b602082019890985260408101969096526060860194909452608085019290925260a084015260c08301526001600160a01b031660e090910152919050565b6001600160a01b0381168114610add57600080fd5b50565b8035610aeb81610ac8565b919050565b634e487b7160e01b600052604160045260246000fd5b60008060008060008060c08789031215610b1f57600080fd5b8635610b2a81610ac8565b955060208781013595506040880135945060608801359350608088013567ffffffffffffffff80821115610b5d57600080fd5b818a0191508a601f830112610b7157600080fd5b813581811115610b8357610b83610af0565b8060051b604051601f19603f83011681018181108582111715610ba857610ba8610af0565b60405291825284820192508381018501918d831115610bc657600080fd5b938501935b82851015610beb57610bdc85610ae0565b84529385019392850192610bcb565b809750505050505050610c0060a08801610ae0565b90509295509295509295565b634e487b7160e01b600052601160045260246000fd5b60008219821115610c3557610c35610c0c565b500190565b634e487b7160e01b600052603260045260246000fd5b6000816000190483118215151615610c6a57610c6a610c0c565b500290565b600082610c8c57634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610ca357600080fd5b8151610cae81610ac8565b939250505056fea2646970667358221220697f476f8b19205bb97dd183fdf3974dc5ba0ccdae3adcf9b22035e8432d2f3b64736f6c634300080f0033a2646970667358221220c58d4733cf1f5dc4ca1a82abe16ba94edb2468b1f5d57655e62761c228ee0a3a64736f6c634300080f0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3880,
        "contract": "src/VoteFactory.sol:VoteFactory",
        "label": "viewAddr",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 3884,
        "contract": "src/VoteFactory.sol:VoteFactory",
        "label": "getVote",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 3888,
        "contract": "src/VoteFactory.sol:VoteFactory",
        "label": "isVote",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 3891,
        "contract": "src/VoteFactory.sol:VoteFactory",
        "label": "allVotes",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 3893,
        "contract": "src/VoteFactory.sol:VoteFactory",
        "label": "admin",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}