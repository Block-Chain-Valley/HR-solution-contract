{
  "address": "0x934067AB8cF0FB1434AD35AE7c9A825390A6C308",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "viewAddr_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "totalAudience",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rewardPresenter",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rewardAudience",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "memberList",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "presenter",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "createVote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getVote",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "getVoteAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isVote",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newViewAddr",
          "type": "address"
        }
      ],
      "name": "setViewAddr",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xb7e229ccf79e8661015a7e167403b06ad1aa428e1ec2eefd575cb8bc779a1009",
  "receipt": {
    "to": null,
    "from": "0x3338f7c7a0ABAC5C20e8d2ACa03E8C25fe31304F",
    "contractAddress": "0x934067AB8cF0FB1434AD35AE7c9A825390A6C308",
    "transactionIndex": 12,
    "gasUsed": "924592",
    "logsBloom": "0x
    "blockHash": "0x95a56e5dd9fc1a4d8b920654feac4b4c047cc6a70a60fcd60e0ca274e8de2983",
    "transactionHash": "0xb7e229ccf79e8661015a7e167403b06ad1aa428e1ec2eefd575cb8bc779a1009",
    "logs": [],
    "blockNumber": 7756894,
    "cumulativeGasUsed": "6557351",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x0CF6D3D3FEC650Cf8dABC925f8307ACC997a425C"
  ],
  "numDeployments": 1,
  "solcInputHash": "f07a694acb2b06fc46811e1d693c3834",
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"viewAddr_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalAudience\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardPresenter\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardAudience\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"memberList\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"presenter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"createVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getVote\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"getVoteAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isVote\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newViewAddr\",\"type\":\"address\"}],\"name\":\"setViewAddr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/VoteFactory.sol\":\"VoteFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/Vote.sol\":{\"content\":\"pragma solidity ^0.8.15;\\n\\nimport \\\"./interface/IVote.sol\\\";\\nimport \\\"./interface/IView.sol\\\";\\n\\nimport \\\"./interface/IBVToken.sol\\\";\\n\\ncontract Vote is IVote {\\n    VoteState vote;\\n    bool isInitialized = false;\\n    event Success(bool result);\\n    address viewAddr;\\n\\n    function initialize(\\n        address viewAddr_,\\n        uint256 totalAudience,\\n        uint256 rewardPresenter,\\n        uint256 rewardAudience,\\n        address[] memory memberList,\\n        address presenter\\n    ) external {\\n        require(isInitialized == false, \\\"Can be Initialized only once\\\");\\n        VoteState memory voteLocal;\\n\\n        viewAddr = viewAddr_;\\n        voteLocal._state = State.Ongoing;\\n        voteLocal._totalAudience = totalAudience;\\n        voteLocal._rewardPresenter = rewardPresenter;\\n        voteLocal._rewardAudience = rewardAudience;\\n        voteLocal._memberList = memberList;\\n        voteLocal._presenter = presenter;\\n        voteLocal._startTime = block.timestamp;\\n        // TODO: \\ud14c\\uc2a4\\ud305 \\uc2dc \\uc2dc\\uac04 \\ud655\\uc778 \\ud544\\uc694\\n        voteLocal._endTime = block.timestamp + 10800;\\n\\n        vote = voteLocal;\\n        isInitialized = true;\\n    }\\n\\n    function voteAudience() external {\\n        VoteState memory voteLocal = vote;\\n        uint256 memberListLength = voteLocal._memberList.length;\\n        bool isInMemberList = false;\\n\\n        for (uint256 i = 0; i < memberListLength; i += 1) {\\n            if (voteLocal._memberList[i] == msg.sender) {\\n                isInMemberList = true;\\n                break;\\n            }\\n        }\\n\\n        if (isInMemberList == false) {\\n            emit Success(false);\\n            revert(\\\"msg.sender must be audience\\\");\\n        }\\n\\n        if (block.timestamp >= voteLocal._endTime) {\\n            if (voteLocal._approvedAudience < (voteLocal._totalAudience * 2) / 3) {\\n                voteLocal._state = State.Rejected;\\n            }\\n        } else {\\n            voteLocal._approvedAudience = voteLocal._approvedAudience + 1;\\n            emit Success(true);\\n\\n            address bvTokenAddr = IView(viewAddr).getBVTokenAddress();\\n            IBVToken(bvTokenAddr).giveReward(msg.sender, voteLocal._rewardAudience);\\n            if (voteLocal._approvedAudience >= (voteLocal._totalAudience * 2) / 3) {\\n                IBVToken(bvTokenAddr).giveReward(voteLocal._presenter, voteLocal._rewardPresenter);\\n                voteLocal._state = State.Approved;\\n            } else if (voteLocal._approvedAudience < (voteLocal._totalAudience * 2) / 3) {\\n                voteLocal._state = State.Ongoing;\\n            }\\n        }\\n\\n        vote = voteLocal;\\n    }\\n}\\n\",\"keccak256\":\"0x04664bf1c6c85beed1e9ade8148f9c17c54c252cc652dc78aaeb2bbb67c69128\"},\"src/VoteFactory.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.15;\\n\\nimport \\\"./interface/IVoteFactory.sol\\\";\\nimport \\\"./Vote.sol\\\";\\n\\ncontract VoteFactory is IVoteFactory {\\n    address viewAddr;\\n    // \\ud22c\\ud45c index -> \\ud22c\\ud45c \\ucee8\\ud2b8\\ub799\\ud2b8 \\uc8fc\\uc18c\\n    mapping(uint256 => address) public getVote;\\n    // \\ud22c\\ud45c \\ucee8\\ud2b8\\ub799\\ud2b8 \\uc8fc\\uc18c => \\ucee8\\ud2b8\\ub799 \\uc874\\uc7ac \\uc720\\ubb34 //\\n    mapping(address => bool) public isVote;\\n    address public admin;\\n\\n    // event PairCreated(address indexed token0, address indexed token1, address pair, uint256);\\n\\n    constructor(address viewAddr_) {\\n        admin = msg.sender;\\n        viewAddr = viewAddr_;\\n    }\\n\\n    modifier onlyAdmin() {\\n        require(admin == msg.sender, \\\"ACCESS_DENIED\\\");\\n        _;\\n    }\\n\\n    function setAdmin() private onlyAdmin {\\n        admin = msg.sender;\\n    }\\n\\n    function setViewAddr(address newViewAddr) external onlyAdmin {\\n        viewAddr = newViewAddr;\\n    }\\n\\n    function createVote(\\n        uint256 totalAudience,\\n        uint256 rewardPresenter,\\n        uint256 rewardAudience,\\n        address[] memory memberList,\\n        address presenter,\\n        uint256 date\\n    ) external {\\n        address voteAddr;\\n        bytes memory bytecode = type(Vote).creationCode;\\n        bytes32 salt = keccak256(abi.encodePacked(date));\\n        assembly {\\n            voteAddr := create2(0, add(bytecode, 32), mload(bytecode), salt)\\n        }\\n\\n        IVote(voteAddr).initialize(viewAddr, totalAudience, rewardPresenter, rewardAudience, memberList, presenter);\\n\\n        getVote[date] = voteAddr;\\n        isVote[voteAddr] = true;\\n\\n        // emit VoteCreated();\\n    }\\n\\n    function getVoteAddress(uint256 date) external returns (address) {\\n        return getVote[date];\\n    }\\n}\\n\",\"keccak256\":\"0x0cd67e1a30e810e79d290973625b18cf55a871ceac8cd99e643f4582251d52f8\",\"license\":\"UNLICENSED\"},\"src/interface/IAttendance.sol\":{\"content\":\"pragma solidity ^0.8.15;\\n\\ninterface IAttendance {\\n    function getAttendance(address member, uint256 date) external view returns (string memory attendance);\\n\\n    function setAttendance(\\n        address member,\\n        string memory state,\\n        uint256 date\\n    ) external;\\n}\\n\",\"keccak256\":\"0x528c7f68b23a5684c82841a31a7b39b6116697722c25618a8ea629d00d09ad0d\"},\"src/interface/IBVToken.sol\":{\"content\":\"pragma solidity ^0.8.15;\\n\\ninterface IBVToken {\\n    function giveReward(address rewardAddress, uint256 reward) external;\\n}\\n\",\"keccak256\":\"0x8ae71fa86f79789746ff46a4d041d7a5169ab8a1b0e4f75a04be5f7f85ff5463\"},\"src/interface/IView.sol\":{\"content\":\"pragma solidity ^0.8.15;\\n\\nimport \\\"./IAttendance.sol\\\";\\n\\ninterface IView {\\n    function getVoteAddress(uint256 date) external returns (address voteContractAddress);\\n\\n    function getAttendanceAddress() external returns (address);\\n\\n    function getBVTokenAddress() external returns (address);\\n\\n    function getVoteFactoryAddress() external returns (address);\\n\\n    function setAttendanceAddress(address attendanceAddress) external;\\n\\n    function setBVTokenAddress(address bvTokenAddress) external;\\n\\n    function setVoteFactoryAddress(address voteFactoryAddress) external;\\n}\\n\",\"keccak256\":\"0x8a7c9e5f94cac8c60679fac586d1022baa4ec780703e06c3731cbad350466bd2\"},\"src/interface/IVote.sol\":{\"content\":\"pragma solidity ^0.8.15;\\n\\ninterface IVote {\\n    enum State {\\n        Ongoing,\\n        Approved,\\n        Rejected\\n    }\\n\\n    struct VoteState {\\n        State _state;\\n        uint256 _totalAudience;\\n        uint256 _approvedAudience;\\n        uint256 _startTime;\\n        uint256 _endTime;\\n        uint256 _rewardPresenter;\\n        uint256 _rewardAudience;\\n        address[] _memberList;\\n        address _presenter;\\n    }\\n\\n    // event VoteStart(uint256 _timestamp);\\n\\n    // event VoteResult(uint256 _timestamp, uint256 _totalAudience, uint256 _approvedAudience, State _result);\\n\\n    function initialize(\\n        address viewAddr,\\n        uint256 totalAudience,\\n        uint256 rewardPresenter,\\n        uint256 rewardAudience,\\n        address[] memory memberList,\\n        address presenter\\n    ) external;\\n\\n    function voteAudience() external;\\n}\\n\",\"keccak256\":\"0xc0b1203f13e8ac78e1f54af9769fe5d5847446f051ca74c829334161b1cdd2c9\"},\"src/interface/IVoteFactory.sol\":{\"content\":\"pragma solidity ^0.8.15;\\n\\ninterface IVoteFactory {\\n    function isVote(address vote) external returns (bool);\\n\\n    function createVote(\\n        uint256 totalAudience,\\n        uint256 rewardPresenter,\\n        uint256 rewardAudience,\\n        address[] memory memberList,\\n        address presenter,\\n        uint256 date\\n    ) external;\\n\\n    function getVoteAddress(uint256 date) external returns (address voteAddress);\\n}\\n\",\"keccak256\":\"0xb2de68380090966c0ac9c6abd9b8adc17d7cb3c03c7204586f3a69b236087d4c\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610f8e380380610f8e83398101604081905261002f91610062565b60038054336001600160a01b031991821617909155600080549091166001600160a01b0392909216919091179055610092565b60006020828403121561007457600080fd5b81516001600160a01b038116811461008b57600080fd5b9392505050565b610eed806100a16000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806329e19468146100675780635a55c1f01461009f5780638d535cd5146100e0578063c4680f1d146100f5578063ea965b891461011e578063f851a44014610131575b600080fd5b61008a6100753660046102f1565b60026020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100c86100ad366004610313565b6001602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610096565b6100f36100ee3660046102f1565b610144565b005b6100c8610103366004610313565b6000908152600160205260409020546001600160a01b031690565b6100f361012c366004610342565b6101b4565b6003546100c8906001600160a01b031681565b6003546001600160a01b031633146101925760405162461bcd60e51b815260206004820152600d60248201526c1050d0d154d4d7d11153925151609a1b604482015260640160405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b600080604051806020016101c7906102c8565b601f1982820381018352601f9091011660408181526020820186905291925060009101604051602081830303815290604052805190602001209050808251602084016000f560005460405163907cc7b160e01b81529194506001600160a01b038086169263907cc7b1926102499216908d908d908d908d908d9060040161043f565b600060405180830381600087803b15801561026357600080fd5b505af1158015610277573d6000803e3d6000fd5b5050506000948552505060016020818152604080862080546001600160a01b039096166001600160a01b0319909616861790559385526002905291909220805460ff19169091179055505050505050565b6109fe806104ba83390190565b80356001600160a01b03811681146102ec57600080fd5b919050565b60006020828403121561030357600080fd5b61030c826102d5565b9392505050565b60006020828403121561032557600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60008060008060008060c0878903121561035b57600080fd5b86359550602080880135955060408801359450606088013567ffffffffffffffff8082111561038957600080fd5b818a0191508a601f83011261039d57600080fd5b8135818111156103af576103af61032c565b8060051b604051601f19603f830116810181811085821117156103d4576103d461032c565b60405291825284820192508381018501918d8311156103f257600080fd5b938501935b8285101561041757610408856102d5565b845293850193928501926103f7565b80985050505050505061042c608088016102d5565b915060a087013590509295509295509295565b600060c0820160018060a01b03808a1684526020898186015288604086015287606086015260c0608086015282875180855260e087019150828901945060005b8181101561049d57855185168352948301949183019160010161047f565b5050809450505080851660a0850152505097965050505050505056fe60806040526009805460ff1916905534801561001a57600080fd5b506109d48061002a6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063907cc7b11461003b578063df4985fa14610050575b600080fd5b61004e6100493660046107d9565b610058565b005b61004e610232565b60095460ff16156100b05760405162461bcd60e51b815260206004820152601c60248201527f43616e20626520496e697469616c697a6564206f6e6c79206f6e63650000000060448201526064015b60405180910390fd5b61010960408051610120810190915280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016060815260200160006001600160a01b031681525090565b60098054610100600160a81b0319166101006001600160a01b038a1602179055600081819052506020810186905260a0810185905260c0810184905260e081018390526001600160a01b038216610100820152426060820181905261017090612a3061090b565b6080820152805160008054839290829060ff19166001836002811115610198576101986108df565b0217905550602082810151600183015560408301516002830155606083015160038301556080830151600483015560a0830151600583015560c0830151600683015560e083015180516101f19260078501920190610721565b506101009190910151600890910180546001600160a01b0319166001600160a01b0390921691909117905550506009805460ff191660011790555050505050565b604080516101208101909152600080549091908290829060ff16600281111561025d5761025d6108df565b600281111561026e5761026e6108df565b81526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481526020016007820180548060200260200160405190810160405280929190818152602001828054801561030757602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116102e9575b5050509183525050600891909101546001600160a01b031660209091015260e0810151519091506000805b8281101561038b57336001600160a01b03168460e00151828151811061035a5761035a610923565b60200260200101516001600160a01b031603610379576001915061038b565b61038460018261090b565b9050610332565b5080151560000361041257604051600081527f3b0a8ddef325df2bfdfa6b430ae4c8421841cd135bfa8fb5e432f200787520bb9060200160405180910390a160405162461bcd60e51b815260206004820152601b60248201527f6d73672e73656e646572206d7573742062652061756469656e6365000000000060448201526064016100a7565b8260800151421061044f576003836020015160026104309190610939565b61043a9190610958565b8360400151101561044a57600283525b610675565b604083015161045f90600161090b565b60408085019190915251600181527f3b0a8ddef325df2bfdfa6b430ae4c8421841cd135bfa8fb5e432f200787520bb9060200160405180910390a16000600960019054906101000a90046001600160a01b03166001600160a01b031663ca65bd896040518163ffffffff1660e01b81526004016020604051808303816000875af11580156104f1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610515919061097a565b60c085015160405163ce8ae9f360e01b815233600482015260248101919091529091506001600160a01b0382169063ce8ae9f390604401600060405180830381600087803b15801561056657600080fd5b505af115801561057a573d6000803e3d6000fd5b505050506003846020015160026105919190610939565b61059b9190610958565b8460400151106106465761010084015160a085015160405163ce8ae9f360e01b81526001600160a01b0384169263ce8ae9f3926105ee926004016001600160a01b03929092168252602082015260400190565b600060405180830381600087803b15801561060857600080fd5b505af115801561061c573d6000803e3d6000fd5b508692506001915061062b9050565b9081600281111561063e5761063e6108df565b905250610673565b6003846020015160026106599190610939565b6106639190610958565b8460400151101561067357600084525b505b825160008054859290829060ff19166001836002811115610698576106986108df565b0217905550602082810151600183015560408301516002830155606083015160038301556080830151600483015560a0830151600583015560c0830151600683015560e083015180516106f19260078501920190610721565b506101009190910151600890910180546001600160a01b0319166001600160a01b03909216919091179055505050565b828054828255906000526020600020908101928215610776579160200282015b8281111561077657825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610741565b50610782929150610786565b5090565b5b808211156107825760008155600101610787565b6001600160a01b03811681146107b057600080fd5b50565b80356107be8161079b565b919050565b634e487b7160e01b600052604160045260246000fd5b60008060008060008060c087890312156107f257600080fd5b86356107fd8161079b565b955060208781013595506040880135945060608801359350608088013567ffffffffffffffff8082111561083057600080fd5b818a0191508a601f83011261084457600080fd5b813581811115610856576108566107c3565b8060051b604051601f19603f8301168101818110858211171561087b5761087b6107c3565b60405291825284820192508381018501918d83111561089957600080fd5b938501935b828510156108be576108af856107b3565b8452938501939285019261089e565b8097505050505050506108d360a088016107b3565b90509295509295509295565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000821982111561091e5761091e6108f5565b500190565b634e487b7160e01b600052603260045260246000fd5b6000816000190483118215151615610953576109536108f5565b500290565b60008261097557634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561098c57600080fd5b81516109978161079b565b939250505056fea26469706673582212202a6a07f4a46a3419ccd722f3bd3c5275d244b95fed53f2e2fff91d6756bc342564736f6c634300080f0033a2646970667358221220e79bb1ad94badce369555926fcb6ae4aa46b6ca1ae86b4de2497a3d17c11f49e64736f6c634300080f0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c806329e19468146100675780635a55c1f01461009f5780638d535cd5146100e0578063c4680f1d146100f5578063ea965b891461011e578063f851a44014610131575b600080fd5b61008a6100753660046102f1565b60026020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100c86100ad366004610313565b6001602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610096565b6100f36100ee3660046102f1565b610144565b005b6100c8610103366004610313565b6000908152600160205260409020546001600160a01b031690565b6100f361012c366004610342565b6101b4565b6003546100c8906001600160a01b031681565b6003546001600160a01b031633146101925760405162461bcd60e51b815260206004820152600d60248201526c1050d0d154d4d7d11153925151609a1b604482015260640160405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b600080604051806020016101c7906102c8565b601f1982820381018352601f9091011660408181526020820186905291925060009101604051602081830303815290604052805190602001209050808251602084016000f560005460405163907cc7b160e01b81529194506001600160a01b038086169263907cc7b1926102499216908d908d908d908d908d9060040161043f565b600060405180830381600087803b15801561026357600080fd5b505af1158015610277573d6000803e3d6000fd5b5050506000948552505060016020818152604080862080546001600160a01b039096166001600160a01b0319909616861790559385526002905291909220805460ff19169091179055505050505050565b6109fe806104ba83390190565b80356001600160a01b03811681146102ec57600080fd5b919050565b60006020828403121561030357600080fd5b61030c826102d5565b9392505050565b60006020828403121561032557600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60008060008060008060c0878903121561035b57600080fd5b86359550602080880135955060408801359450606088013567ffffffffffffffff8082111561038957600080fd5b818a0191508a601f83011261039d57600080fd5b8135818111156103af576103af61032c565b8060051b604051601f19603f830116810181811085821117156103d4576103d461032c565b60405291825284820192508381018501918d8311156103f257600080fd5b938501935b8285101561041757610408856102d5565b845293850193928501926103f7565b80985050505050505061042c608088016102d5565b915060a087013590509295509295509295565b600060c0820160018060a01b03808a1684526020898186015288604086015287606086015260c0608086015282875180855260e087019150828901945060005b8181101561049d57855185168352948301949183019160010161047f565b5050809450505080851660a0850152505097965050505050505056fe60806040526009805460ff1916905534801561001a57600080fd5b506109d48061002a6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063907cc7b11461003b578063df4985fa14610050575b600080fd5b61004e6100493660046107d9565b610058565b005b61004e610232565b60095460ff16156100b05760405162461bcd60e51b815260206004820152601c60248201527f43616e20626520496e697469616c697a6564206f6e6c79206f6e63650000000060448201526064015b60405180910390fd5b61010960408051610120810190915280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016060815260200160006001600160a01b031681525090565b60098054610100600160a81b0319166101006001600160a01b038a1602179055600081819052506020810186905260a0810185905260c0810184905260e081018390526001600160a01b038216610100820152426060820181905261017090612a3061090b565b6080820152805160008054839290829060ff19166001836002811115610198576101986108df565b0217905550602082810151600183015560408301516002830155606083015160038301556080830151600483015560a0830151600583015560c0830151600683015560e083015180516101f19260078501920190610721565b506101009190910151600890910180546001600160a01b0319166001600160a01b0390921691909117905550506009805460ff191660011790555050505050565b604080516101208101909152600080549091908290829060ff16600281111561025d5761025d6108df565b600281111561026e5761026e6108df565b81526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481526020016007820180548060200260200160405190810160405280929190818152602001828054801561030757602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116102e9575b5050509183525050600891909101546001600160a01b031660209091015260e0810151519091506000805b8281101561038b57336001600160a01b03168460e00151828151811061035a5761035a610923565b60200260200101516001600160a01b031603610379576001915061038b565b61038460018261090b565b9050610332565b5080151560000361041257604051600081527f3b0a8ddef325df2bfdfa6b430ae4c8421841cd135bfa8fb5e432f200787520bb9060200160405180910390a160405162461bcd60e51b815260206004820152601b60248201527f6d73672e73656e646572206d7573742062652061756469656e6365000000000060448201526064016100a7565b8260800151421061044f576003836020015160026104309190610939565b61043a9190610958565b8360400151101561044a57600283525b610675565b604083015161045f90600161090b565b60408085019190915251600181527f3b0a8ddef325df2bfdfa6b430ae4c8421841cd135bfa8fb5e432f200787520bb9060200160405180910390a16000600960019054906101000a90046001600160a01b03166001600160a01b031663ca65bd896040518163ffffffff1660e01b81526004016020604051808303816000875af11580156104f1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610515919061097a565b60c085015160405163ce8ae9f360e01b815233600482015260248101919091529091506001600160a01b0382169063ce8ae9f390604401600060405180830381600087803b15801561056657600080fd5b505af115801561057a573d6000803e3d6000fd5b505050506003846020015160026105919190610939565b61059b9190610958565b8460400151106106465761010084015160a085015160405163ce8ae9f360e01b81526001600160a01b0384169263ce8ae9f3926105ee926004016001600160a01b03929092168252602082015260400190565b600060405180830381600087803b15801561060857600080fd5b505af115801561061c573d6000803e3d6000fd5b508692506001915061062b9050565b9081600281111561063e5761063e6108df565b905250610673565b6003846020015160026106599190610939565b6106639190610958565b8460400151101561067357600084525b505b825160008054859290829060ff19166001836002811115610698576106986108df565b0217905550602082810151600183015560408301516002830155606083015160038301556080830151600483015560a0830151600583015560c0830151600683015560e083015180516106f19260078501920190610721565b506101009190910151600890910180546001600160a01b0319166001600160a01b03909216919091179055505050565b828054828255906000526020600020908101928215610776579160200282015b8281111561077657825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610741565b50610782929150610786565b5090565b5b808211156107825760008155600101610787565b6001600160a01b03811681146107b057600080fd5b50565b80356107be8161079b565b919050565b634e487b7160e01b600052604160045260246000fd5b60008060008060008060c087890312156107f257600080fd5b86356107fd8161079b565b955060208781013595506040880135945060608801359350608088013567ffffffffffffffff8082111561083057600080fd5b818a0191508a601f83011261084457600080fd5b813581811115610856576108566107c3565b8060051b604051601f19603f8301168101818110858211171561087b5761087b6107c3565b60405291825284820192508381018501918d83111561089957600080fd5b938501935b828510156108be576108af856107b3565b8452938501939285019261089e565b8097505050505050506108d360a088016107b3565b90509295509295509295565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000821982111561091e5761091e6108f5565b500190565b634e487b7160e01b600052603260045260246000fd5b6000816000190483118215151615610953576109536108f5565b500290565b60008261097557634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561098c57600080fd5b81516109978161079b565b939250505056fea26469706673582212202a6a07f4a46a3419ccd722f3bd3c5275d244b95fed53f2e2fff91d6756bc342564736f6c634300080f0033a2646970667358221220e79bb1ad94badce369555926fcb6ae4aa46b6ca1ae86b4de2497a3d17c11f49e64736f6c634300080f0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3610,
        "contract": "src/VoteFactory.sol:VoteFactory",
        "label": "viewAddr",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 3614,
        "contract": "src/VoteFactory.sol:VoteFactory",
        "label": "getVote",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 3618,
        "contract": "src/VoteFactory.sol:VoteFactory",
        "label": "isVote",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 3620,
        "contract": "src/VoteFactory.sol:VoteFactory",
        "label": "admin",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}